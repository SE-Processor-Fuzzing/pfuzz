name: CI

on: [push, pull_request]

jobs:
  ci:
    strategy:
      matrix:
          os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.x'

      - name: Install poetry
        run: |
          python -m pip install poetry==1.8.2

      - name: Configure poetry
        run: |
          python -m poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          python -m poetry install --with dev

      - name: Check format with black
        run: |
          python -m poetry run black --diff --check $(git ls-files '*.py')

      - name: Static types check with mypy
        run: |
          python -m poetry run mypy --strict $(git ls-files '*.py')

      - name: Run Ruff linter
        run: |
          python -m poetry run ruff check $(git ls-files '*.py') --config 'pyproject.toml'
